{"version":3,"sources":["helpers/numbers.ts","constants/index.ts","components/UserCard/styles.ts","components/ErrorAlert/styles.ts","components/ErrorAlert/ErrorAlert.tsx","components/ErrorAlert/index.ts","components/UserCard/UserCard.tsx","components/UserCard/index.ts","assets/img/Tik-tok-logo.jpeg","components/MediaCard/styles.ts","components/MediaCard/MediaCard.tsx","components/MediaCard/index.ts","components/UserPostList/UserPost/UserPost.tsx","components/UserPostList/UserPost/index.ts","services/usePageHandler.ts","components/UserPostList/styles.ts","components/UserPostList/UserPostList.tsx","components/UserPostList/index.ts","api/constants.ts","api/fetchData.ts","api/useFetch.ts","pages/ProfilePage/ProfilePage.tsx","pages/ProfilePage/index.ts","components/FeedPostsList/FeedPost/PostHeader/styles.ts","components/FeedPostsList/FeedPost/PostHeader/PostHeader.tsx","components/FeedPostsList/FeedPost/PostHeader/index.ts","components/FeedPostsList/FeedPost/PostActions/styles.ts","components/FeedPostsList/FeedPost/PostActions/PostActions.tsx","components/FeedPostsList/FeedPost/PostActions/index.ts","components/FeedPostsList/FeedPost/styles.ts","components/FeedPostsList/FeedPost/FeedPost.tsx","components/FeedPostsList/FeedPost/index.ts","components/FeedPostsList/styles.ts","components/FeedPostsList/FeedPostsList.tsx","components/FeedPostsList/index.ts","pages/TrendingPage/TrendingPage.tsx","pages/TrendingPage/index.ts","components/MenuAppBar/styles.ts","components/MenuAppBar/MenuAppBar.tsx","components/MenuAppBar/index.ts","pages/App.tsx","index.tsx"],"names":["formatLargeNumber","number","Intl","NumberFormat","notation","compactDisplay","format","Pages","getGridWidth","isMobile","colors","MEDIA_QUERY","MobileProp","ErrorMessages","StyledCard","styled","Card","width","height","marginTop","marginLeft","marginRight","SpinnerCard","display","justifyContent","alignItems","StyledProgress","CircularProgress","color","StyledSection","StyledAvatar","Avatar","margin","StyledCardContent","CardContent","flexDirection","StyledArticle","StyledTypography","Typography","whiteSpace","StyledSnackbar","Snackbar","cursor","StyledAlert","textAlign","renderErrorAlert","profile","ErrorAlert","message","open","setOpen","navigate","closeHandler","VideoError","Feed","anchorOrigin","vertical","horizontal","onClose","onClick","elevation","variant","severity","UnknownError","isLoading","size","thickness","nickname","avatarLarger","signature","user","followingCount","followerCount","heart","stats","alt","src","position","StyledDiv","zIndex","top","left","StyledIcon","id","videoURL","error","setError","fallback","setFallback","CardMedia","component","image","muted","controls","autoPlay","loop","onError","playCount","data","video","playAddr","allPosts","displayedPosts","slice","currentPage","setCurrentPage","lastPostIndex","firstPostindex","postsOnPage","posts","setPosts","window","scrollTo","StyledGridContainer","Grid","shouldForwardProp","prop","marginBottom","matches","useMediaQuery","length","postsPerPage","container","spacing","map","userPost","key","item","Pagination","count","MAX_POSTS","event","clickTarget","target","innerText","clickHandler","Endpoint","useFetch","endpoint","setData","setIsLoading","isError","setIsError","uniqueId","adjustedEndpoint","dependancyArray","userFeed","UserFeed","UserInfo","push","controller","AbortController","fetch","signal","method","headers","fetchData","then","response","json","result","Array","isArray","itemList","resultCheck","catch","abort","userPosts","postsIsLoading","postsIsError","profileIsLoading","profileIsError","definedError","Object","keys","includes","wrongPageError","WrongPage","maxWidth","nickName","text","hashtags","hashtagsString","tag","Link","href","underline","name","StyledIconButton","IconButton","backgroundColor","diggCount","commentCount","authorMeta","videoUrl","Profile","avatar","paddingLeft","post","xs","TrendingFeed","StyledBox","Box","flexGrow","StyledAppBar","AppBar","location","isActive","setIsActive","feed","pathname","Toolbar","path","element","User","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.56ecca50.chunk.js","sourcesContent":["export const formatLargeNumber = (number: number) => {\n  return new Intl.NumberFormat('en-GB', {\n    notation: 'compact',\n    compactDisplay: 'short',\n  }).format(number);\n};\n","export enum Pages {\n  Feed = '/',\n  Profile = '/profile',\n  User = 'profile/:uniqueId',\n}\n\nexport const VIDEO_HEIGHT = '400';\n\nexport const getGridWidth = (isMobile: boolean | undefined) =>\n  isMobile ? 230 : 700;\n\nexport const MAX_POSTS = 30;\nexport const POSTS_PER_PAGE = 6;\n\nexport const colors = {\n  primary: '#F4C486',\n  secondary: '#CFC8C0',\n};\n\nexport const MEDIA_QUERY = '(max-width:600px)';\nexport const MobileProp = 'isMobile';\n\nexport enum ErrorMessages {\n  WrongPage = 'Oops... Page Not Found',\n  VideoError = 'Looks like there are might be a problem with some videos',\n  UnknownError = 'Something Went Wrong...',\n}\n","import Avatar, { AvatarProps } from '@mui/material/Avatar';\nimport Card, { CardProps } from '@mui/material/Card';\nimport CircularProgress, {\n  CircularProgressProps,\n} from '@mui/material/CircularProgress';\nimport CardContent, { CardContentProps } from '@mui/material/CardContent';\nimport Typography, { TypographyProps } from '@mui/material/Typography';\nimport { styled } from '@mui/material/styles';\n\nimport { colors } from '../../constants';\n\nconst StyledCard = styled(Card)<CardProps>(() => ({\n  width: 360,\n  height: 'fit-content',\n  marginTop: 100,\n  marginLeft: 'auto',\n  marginRight: 'auto',\n}));\n\nconst SpinnerCard = styled(Card)<CardProps>(() => ({\n  width: 360,\n  marginTop: 100,\n  height: 220,\n  marginLeft: 'auto',\n  marginRight: 'auto',\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n}));\n\nconst StyledProgress = styled(CircularProgress)<CircularProgressProps>(() => ({\n  color: colors.secondary,\n}));\n\nconst StyledSection = styled('section')(() => ({\n  display: 'flex',\n  justifyContent: 'space-around',\n}));\n\nconst StyledAvatar = styled(Avatar)<AvatarProps>(() => ({\n  height: 100,\n  width: 100,\n  margin: 20,\n}));\n\nconst StyledCardContent = styled(CardContent)<CardContentProps>(() => ({\n  display: 'flex',\n  flexDirection: 'column',\n  justifyContent: 'center',\n}));\n\nconst StyledArticle = styled('article')(() => ({\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'end',\n}));\n\nconst StyledTypography = styled(Typography)<TypographyProps>(() => ({\n  whiteSpace: 'pre-wrap',\n}));\n\nexport {\n  StyledCard,\n  SpinnerCard,\n  StyledProgress,\n  StyledSection,\n  StyledAvatar,\n  StyledCardContent,\n  StyledArticle,\n  StyledTypography,\n};\n","import Snackbar, { SnackbarProps } from '@mui/material/Snackbar';\nimport MuiAlert, { AlertProps } from '@mui/material/Alert';\nimport { styled } from '@mui/material/styles';\n\nconst StyledSnackbar = styled(Snackbar)<SnackbarProps>(() => ({\n  marginTop: 70,\n  ':hover': {\n    cursor: 'pointer',\n  },\n}));\n\nconst StyledAlert = styled(MuiAlert)<AlertProps>(() => ({\n  width: '100%',\n  textAlign: 'center',\n}));\n\nexport { StyledSnackbar, StyledAlert };\n","import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nimport { ErrorObject } from '../../domain/trendingFeedTypes';\nimport { Pages, ErrorMessages } from '../../constants';\nimport { StyledSnackbar, StyledAlert } from './styles';\n\ntype Props = {\n  message: string | undefined;\n};\n\nexport const renderErrorAlert = (profile: ErrorObject) => {\n  return <ErrorAlert message={profile?.message} />;\n};\n\nconst ErrorAlert = ({ message }: Props) => {\n  const [open, setOpen] = useState(true);\n\n  const navigate = useNavigate();\n\n  const closeHandler = () => {\n    if (message === ErrorMessages.VideoError) {\n      setOpen(false);\n    } else {\n      navigate(Pages.Feed);\n    }\n  };\n\n  return (\n    <StyledSnackbar\n      open={open}\n      anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n      onClose={closeHandler}\n      onClick={closeHandler}\n    >\n      <StyledAlert elevation={6} variant=\"filled\" severity=\"error\">\n        {message || ErrorMessages.UnknownError}\n      </StyledAlert>\n    </StyledSnackbar>\n  );\n};\n\nexport default ErrorAlert;\n","import ErrorAlert from './ErrorAlert';\n\nexport default ErrorAlert;\n","import React, { ReactElement } from 'react';\nimport CardContent from '@mui/material/CardContent';\nimport Typography from '@mui/material/Typography';\n\nimport { formatLargeNumber } from '../../helpers/numbers';\nimport { UserInfo } from '../../domain/userInfoTypes';\nimport { ErrorMessages } from '../../constants';\nimport {\n  StyledCard,\n  SpinnerCard,\n  StyledProgress,\n  StyledSection,\n  StyledAvatar,\n  StyledCardContent,\n  StyledArticle,\n  StyledTypography,\n} from './styles';\nimport ErrorAlert from '../ErrorAlert';\n\ntype Props = {\n  profile: UserInfo | undefined;\n  isLoading: boolean;\n};\n\nconst UserCard = ({ profile, isLoading }: Props): ReactElement => {\n  if (isLoading) {\n    return (\n      <SpinnerCard>\n        <StyledProgress size={100} thickness={2} />\n      </SpinnerCard>\n    );\n  }\n\n  if (!profile) {\n    return <ErrorAlert message={ErrorMessages.UnknownError} />;\n  }\n\n  const { nickname, avatarLarger, signature } = profile.user;\n  const { followingCount, followerCount, heart } = profile.stats;\n\n  return (\n    <StyledCard>\n      <StyledSection>\n        <StyledAvatar alt={nickname} src={avatarLarger} />\n        <StyledCardContent>\n          <Typography variant=\"h6\" textAlign=\"center\">\n            {nickname}\n          </Typography>\n          <StyledArticle>\n            <Typography variant=\"subtitle2\" textAlign=\"center\">\n              {formatLargeNumber(followingCount)}&nbsp;\n            </Typography>\n            <Typography variant=\"caption\" textAlign=\"center\">\n              Following\n            </Typography>\n          </StyledArticle>\n          <StyledArticle>\n            <Typography variant=\"subtitle2\" textAlign=\"center\">\n              {formatLargeNumber(followerCount)}&nbsp;\n            </Typography>\n            <Typography variant=\"caption\" textAlign=\"center\">\n              Followers\n            </Typography>\n          </StyledArticle>\n          <StyledArticle>\n            <Typography variant=\"subtitle2\" textAlign=\"center\">\n              {formatLargeNumber(heart)}&nbsp;\n            </Typography>\n            <Typography variant=\"caption\" textAlign=\"center\">\n              Likes\n            </Typography>\n          </StyledArticle>\n        </StyledCardContent>\n      </StyledSection>\n      <CardContent>\n        <StyledTypography variant=\"subtitle2\" textAlign=\"center\">\n          {signature}\n        </StyledTypography>\n      </CardContent>\n    </StyledCard>\n  );\n};\n\nexport default UserCard;\n","import UserCard from './UserCard';\n\nexport default UserCard;\n","export default __webpack_public_path__ + \"static/media/Tik-tok-logo.3d25bce8.jpeg\";","import Card, { CardProps } from '@mui/material/Card';\nimport PlayArrowOutlinedIcon from '@mui/icons-material/PlayArrowOutlined';\nimport { styled } from '@mui/material/styles';\n\nconst StyledCard = styled(Card)<CardProps>(() => ({\n  position: 'relative',\n  width: 225,\n}));\n\nconst StyledDiv = styled('div')(() => ({\n  position: 'absolute',\n  display: 'flex',\n  margin: 10,\n  zIndex: 1,\n  top: 0,\n  left: 0,\n}));\n\nconst StyledIcon = styled(PlayArrowOutlinedIcon)(() => ({\n  color: 'white',\n}));\n\nexport { StyledCard, StyledDiv, StyledIcon };\n","import React, { useState, useEffect } from 'react';\nimport CardMedia from '@mui/material/CardMedia';\nimport Typography from '@mui/material/Typography';\n\nimport { formatLargeNumber } from '../../helpers/numbers';\nimport { VIDEO_HEIGHT } from '../../constants';\nimport { Stats } from '../../domain/userFeedTypes';\nimport fallbackSrc from '../../assets/img/Tik-tok-logo.jpeg';\nimport { StyledCard, StyledDiv, StyledIcon } from './styles';\n\ntype Props = {\n  id: string;\n  videoURL: string;\n  error: string | null;\n  setError: (a: string | null) => void;\n  stats?: Stats;\n};\n\nconst MediaCard = ({ id, videoURL, error, setError, stats }: Props) => {\n  const [fallback, setFallback] = useState(false);\n\n  useEffect(() => {\n    if (id === error) {\n      setFallback(true);\n    }\n  }, [id, error]);\n\n  return (\n    <StyledCard>\n      <CardMedia\n        component={fallback ? 'img' : 'video'}\n        height={VIDEO_HEIGHT}\n        image={fallback ? fallbackSrc : videoURL}\n        muted\n        controls\n        autoPlay\n        loop\n        onError={() => setError(id)}\n      />\n      {stats && (\n        <StyledDiv>\n          <StyledIcon />\n          <Typography color=\"white\">\n            {formatLargeNumber(stats.playCount)}\n          </Typography>\n        </StyledDiv>\n      )}\n    </StyledCard>\n  );\n};\n\nexport default MediaCard;\n","import MediaCard from './MediaCard';\n\nexport default MediaCard;\n","import React from 'react';\n\nimport MediaCard from '../../MediaCard';\nimport { UserFeedItem } from '../../../domain/userFeedTypes';\n\ntype Props = {\n  data: UserFeedItem;\n  error: string | null;\n  setError: (a: string | null) => void;\n};\n\nconst UserPost = ({ data, error, setError }: Props) => {\n  const { id, video, stats } = data;\n\n  return (\n    <MediaCard\n      id={id}\n      videoURL={video.playAddr}\n      error={error}\n      setError={setError}\n      stats={stats}\n    />\n  );\n};\n\nexport default UserPost;\n","import UserPost from './UserPost';\n\nexport default UserPost;\n","import React, { useState, useEffect } from 'react';\nimport { MAX_POSTS, POSTS_PER_PAGE } from '../constants';\nimport { TrendingFeedList } from '../domain/trendingFeedTypes';\nimport { UserFeedList } from '../domain/userFeedTypes';\n\ntype PageList = TrendingFeedList | UserFeedList;\n\ntype PageData = {\n  posts: PageList;\n  setCurrentPage: React.Dispatch<React.SetStateAction<number>>;\n};\n\nconst usePageHandler = (allPosts: PageList): PageData => {\n  const displayedPosts = allPosts?.slice(0, MAX_POSTS);\n\n  const [currentPage, setCurrentPage] = useState(1);\n  const lastPostIndex = currentPage * POSTS_PER_PAGE;\n  const firstPostindex = lastPostIndex - POSTS_PER_PAGE;\n  const postsOnPage = displayedPosts?.slice(firstPostindex, lastPostIndex);\n  const [posts, setPosts] = useState(postsOnPage);\n\n  useEffect(() => {\n    setPosts(postsOnPage);\n    window.scrollTo(0, 0);\n  }, [allPosts, currentPage]);\n\n  return { posts, setCurrentPage };\n};\n\nexport default usePageHandler;\n","import Grid, { GridProps } from '@mui/material/Grid';\nimport { styled } from '@mui/material/styles';\n\nimport { MobileProp, getGridWidth } from '../../constants';\n\ninterface StyledGridContainerProps extends GridProps {\n  isMobile?: boolean\n}\n\nconst StyledGridContainer = styled(Grid, {\n  shouldForwardProp: (prop) => prop !== MobileProp,\n})<StyledGridContainerProps>(({ isMobile }) => ({\n  marginTop: 50,\n  marginBottom: 50,\n  width: getGridWidth(isMobile),\n  marginLeft: 'auto',\n  marginRight: 'auto',\n}));\n\nconst StyledDiv = styled('div')(() => ({\n  marginLeft: 'auto',\n  marginRight: 'auto',\n  width: '100%',\n  display: 'flex',\n  justifyContent: 'center',\n  marginBottom: 20,\n}));\n\nexport { StyledGridContainer, StyledDiv };\n","import React, { useState, MouseEvent } from 'react';\nimport Grid from '@mui/material/Grid';\nimport Pagination from '@mui/material/Pagination';\nimport useMediaQuery from '@mui/material/useMediaQuery';\nimport { SkeletonPostsList } from 'tiktuk-loading';\n\nimport UserPost from './UserPost';\nimport ErrorAlert from '../ErrorAlert';\nimport {\n  MAX_POSTS,\n  POSTS_PER_PAGE,\n  MEDIA_QUERY,\n  ErrorMessages,\n} from '../../constants';\nimport { UserFeedList, UserFeedItem } from '../../domain/userFeedTypes';\nimport usePageHandler from '../../services/usePageHandler';\nimport { StyledGridContainer, StyledDiv } from './styles';\n\ntype Props = {\n  allPosts: UserFeedList;\n  isLoading: boolean;\n};\n\nconst UserPostList = ({ allPosts, isLoading }: Props) => {\n  const [error, setError] = useState<string | null>(null);\n\n  const matches = useMediaQuery(MEDIA_QUERY);\n  const { posts, setCurrentPage } = usePageHandler(allPosts);\n\n  if (isLoading || !allPosts?.length) {\n    return <SkeletonPostsList postsPerPage={POSTS_PER_PAGE} />;\n  }\n\n  const clickHandler = (event: MouseEvent) => {\n    const clickTarget = event.target as HTMLElement;\n    setCurrentPage(+clickTarget.innerText);\n  };\n\n  return (\n    <div>\n      {error && <ErrorAlert message={ErrorMessages.VideoError} />}\n      <StyledGridContainer isMobile={matches} container spacing={1}>\n        {(posts as UserFeedList).map((userPost: UserFeedItem) => {\n          return (\n            <Grid key={userPost.id} item>\n              <UserPost data={userPost} error={error} setError={setError} />\n            </Grid>\n          );\n        })}\n      </StyledGridContainer>\n      <StyledDiv>\n        <Pagination\n          count={MAX_POSTS / POSTS_PER_PAGE}\n          onClick={(event) => clickHandler(event)}\n        />\n      </StyledDiv>\n    </div>\n  );\n};\n\nexport default UserPostList;\n","import UserPostList from './UserPostList';\n\nexport default UserPostList;\n","export const currentUser = 'dave.xp';\n\nexport enum Endpoint {\n  TrendingFeed = 'trending/feed',\n  UserFeed = 'user/feed/',\n  UserInfo = 'user/info/',\n}\n","type AbortCtrl = {\n  readonly signal: AbortSignal;\n  abort: () => void;\n};\n\nexport const fetchData = (endpoint: string, controller: AbortCtrl) => {\n  return fetch((process.env.REACT_APP_BASE_URL as string) + endpoint, {\n    signal: controller.signal,\n    method: 'GET',\n    headers: {\n      'x-rapidapi-host': 'tiktok33.p.rapidapi.com',\n      'x-rapidapi-key': process.env.REACT_APP_PUBLIC_KEY as string,\n    },\n  });\n};\n","import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { fetchData } from './fetchData';\nimport { currentUser, Endpoint } from './constants';\nimport { TrendingFeedList, ErrorObject } from '../domain/trendingFeedTypes';\nimport { UserInfo } from '../domain/userInfoTypes';\nimport { UserFeedList } from '../domain/userFeedTypes';\n\ntype DataType = TrendingFeedList | UserInfo | UserFeedList | ErrorObject;\n\nexport const useFetch = (endpoint: string) => {\n  const [data, setData] = useState<DataType>();\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n\n  const params = useParams();\n  const chosenUser = params.uniqueId;\n  const user = chosenUser || currentUser;\n\n  let adjustedEndpoint = endpoint;\n  const dependancyArray = [];\n  const userFeed = require('./user-feed.json');\n\n  const resultCheck = (result: DataType) => {\n    if (endpoint === Endpoint.UserFeed && !Array.isArray(result)) {\n      setData(userFeed.itemList);\n    } else {\n      setData(result);\n    }\n  };\n\n  if (endpoint === Endpoint.UserFeed || endpoint === Endpoint.UserInfo) {\n    adjustedEndpoint += user;\n    dependancyArray.push(user);\n  }\n\n  useEffect(() => {\n    const controller = new AbortController();\n    setIsLoading(true);\n    fetchData(adjustedEndpoint, controller)\n      .then((response) => {\n        return response.json();\n      })\n      .then((result) => {\n        setIsLoading(false);\n        resultCheck(result);\n      })\n      .catch(() => {\n        setIsLoading(false);\n        setIsError(true);\n      });\n    return () => controller.abort();\n  }, dependancyArray);\n\n  return { data, isLoading, isError };\n};\n","import React from 'react';\n\nimport UserCard from '../../components/UserCard';\nimport UserPostList from '../../components/UserPostList';\nimport ErrorAlert, {\n  renderErrorAlert,\n} from '../../components/ErrorAlert/ErrorAlert';\nimport { ErrorMessages } from '../../constants';\nimport { UserInfo } from '../../domain/userInfoTypes';\nimport { UserFeedList } from '../../domain/userFeedTypes';\nimport { ErrorObject } from '../../domain/trendingFeedTypes';\nimport { Endpoint } from '../../api/constants';\nimport { useFetch } from '../../api/useFetch';\n\nconst ProfilePage = () => {\n  const {\n    data: userPosts,\n    isLoading: postsIsLoading,\n    isError: postsIsError,\n  } = useFetch(Endpoint.UserFeed);\n\n  const {\n    data: profile,\n    isLoading: profileIsLoading,\n    isError: profileIsError,\n  } = useFetch(Endpoint.UserInfo);\n\n  const definedError =\n    profile && Object.keys(profile as ErrorObject).includes('message');\n\n  const wrongPageError =\n    profile && Object.keys(profile as ErrorObject).length === 0;\n\n  const error = definedError || postsIsError || profileIsError;\n\n  if (error) {\n    return renderErrorAlert(profile as ErrorObject);\n  }\n\n  if (wrongPageError && !profileIsLoading) {\n    return <ErrorAlert message={ErrorMessages.WrongPage} />;\n  }\n\n  return (\n    <div>\n      <UserCard profile={profile as UserInfo} isLoading={profileIsLoading} />\n      <UserPostList\n        allPosts={userPosts as UserFeedList}\n        isLoading={postsIsLoading}\n      />\n    </div>\n  );\n};\n\nexport default ProfilePage;\n","import ProfilePage from './ProfilePage';\n\nexport default ProfilePage;\n","import React from 'react';\nimport Typography, { TypographyProps } from '@mui/material/Typography';\nimport { styled } from '@mui/material/styles';\n\nimport { MobileProp } from '../../../../constants';\n\ninterface StyledDivProps extends React.HTMLAttributes<HTMLDivElement> {\n  isMobile?: boolean\n}\n\nconst StyledDiv = styled('div', {\n  shouldForwardProp: (prop) => prop !== MobileProp,\n})<StyledDivProps>(({ isMobile }) => ({\n  maxWidth: isMobile ? 250 : 'auto',\n}));\n\nconst StyledSection = styled('section')(() => ({\n  marginTop: 5,\n  marginBottom: 5,\n}));\n\nconst StyledTypography = styled(Typography)<TypographyProps>(() => ({\n  ':hover': {\n    cursor: 'pointer',\n  },\n}));\n\nexport { StyledDiv, StyledSection, StyledTypography };\n","import React from 'react';\nimport Typography from '@mui/material/Typography';\nimport Link from '@mui/material/Link';\nimport useMediaQuery from '@mui/material/useMediaQuery';\n\nimport { MEDIA_QUERY } from '../../../../constants';\nimport { Hashtag } from '../../../../domain/trendingFeedTypes';\nimport { StyledDiv, StyledSection, StyledTypography } from './styles';\n\ntype Props = {\n  nickName: string;\n  text: string;\n  hashtags: Hashtag[];\n  onClick: () => void;\n};\n\nconst PostHeader = ({ nickName, text, hashtags, onClick }: Props) => {\n  const matches = useMediaQuery(MEDIA_QUERY);\n\n  const hashtagsString = hashtags.map((tag: Hashtag) => {\n    return (\n      <Typography key={tag.id} display=\"inline\" variant=\"subtitle2\">\n        <Link href=\"#\" underline=\"none\" color=\"black\">\n          #{tag.name + ' '}\n        </Link>\n      </Typography>\n    );\n  });\n\n  return (\n    <StyledDiv isMobile={matches}>\n      {nickName && (\n        <StyledTypography variant=\"subtitle1\" onClick={onClick}>\n          {nickName}\n        </StyledTypography>\n      )}\n      <Typography variant=\"body2\">{text}</Typography>\n      {hashtagsString && <StyledSection>{hashtagsString}</StyledSection>}\n    </StyledDiv>\n  );\n};\n\nexport default PostHeader;\n","import PostHeader from './PostHeader';\n\nexport default PostHeader;\n","import React from 'react';\nimport IconButton, { IconButtonProps } from '@mui/material/IconButton';\nimport { styled } from '@mui/material/styles';\n\nimport { colors, MobileProp } from '../../../../constants';\n\ninterface StyledDivProps extends React.HTMLAttributes<HTMLDivElement> {\n  isMobile?: boolean\n}\n\nconst StyledDiv = styled('div', {\n  shouldForwardProp: (prop) => prop !== MobileProp,\n})<StyledDivProps>(({ isMobile }) => ({\n  display: 'flex',\n  flexDirection: isMobile ? 'row' : 'column',\n  justifyContent: isMobile ? 'space-between' : 'normal',\n  width: isMobile ? 225 : 'auto',\n}));\n\nconst StyledSection = styled('section')(() => ({\n  display: 'flex',\n  alignItems: 'center',\n}));\n\nconst StyledIconButton = styled(IconButton)<IconButtonProps>(() => ({\n  backgroundColor: colors.secondary,\n  margin: 5,\n}));\n\nexport { StyledDiv, StyledSection, StyledIconButton };\n","import React from 'react';\nimport Typography from '@mui/material/Typography';\nimport CommentIcon from '@mui/icons-material/Comment';\nimport ThumbUpIcon from '@mui/icons-material/ThumbUp';\nimport useMediaQuery from '@mui/material/useMediaQuery';\n\nimport { MEDIA_QUERY } from '../../../../constants';\nimport { formatLargeNumber } from '../../../../helpers/numbers';\nimport { StyledDiv, StyledSection, StyledIconButton } from './styles';\n\ntype Props = {\n  diggCount: number;\n  commentCount: number;\n};\n\nconst PostActions = ({ diggCount, commentCount }: Props) => {\n  const matches = useMediaQuery(MEDIA_QUERY);\n\n  return (\n    <StyledDiv isMobile={matches}>\n      <StyledSection>\n        <StyledIconButton size=\"large\" aria-label=\"comments\">\n          <CommentIcon />\n        </StyledIconButton>\n        <Typography>{formatLargeNumber(commentCount)}</Typography>\n      </StyledSection>\n      <StyledSection>\n        <StyledIconButton size=\"large\" aria-label=\"Likes\">\n          <ThumbUpIcon />\n        </StyledIconButton>\n        <Typography>{formatLargeNumber(diggCount)}</Typography>\n      </StyledSection>\n    </StyledDiv>\n  );\n};\n\nexport default PostActions;\n","import PostActions from './PostActions';\n\nexport default PostActions;\n","import React from 'react';\nimport Avatar, { AvatarProps } from '@mui/material/Avatar';\nimport { styled } from '@mui/material/styles';\n\nimport { MobileProp } from '../../../constants';\n\nconst StyledAvatar = styled(Avatar)<AvatarProps>(() => ({\n  margin: 10,\n  ':hover': {\n    cursor: 'pointer',\n  },\n}));\n\nconst StyledDiv = styled('div')(() => ({\n  display: 'flex',\n  width: '100%',\n}));\n\nconst StyledSection = styled('section')(() => ({\n  display: 'flex',\n}));\n\ninterface StyledArticleProps extends React.HTMLAttributes<HTMLDivElement> {\n  isMobile?: boolean\n}\n\nconst StyledArticle = styled('article', {\n  shouldForwardProp: (prop) => prop !== MobileProp,\n})<StyledArticleProps>(({ isMobile }) => ({\n  display: isMobile ? 'block' : 'flex',\n  alignItems: 'end',\n}));\n\nexport { StyledAvatar, StyledDiv, StyledSection, StyledArticle };\n","import React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport useMediaQuery from '@mui/material/useMediaQuery';\n\nimport PostHeader from './PostHeader';\nimport MediaCard from '../../MediaCard';\nimport PostActions from './PostActions';\nimport { Pages, MEDIA_QUERY } from '../../../constants';\nimport { FeedPostItem } from '../../../domain/trendingFeedTypes';\nimport {\n  StyledAvatar,\n  StyledDiv,\n  StyledSection,\n  StyledArticle,\n} from './styles';\n\ntype Props = {\n  data: FeedPostItem;\n  error: string | null;\n  setError: (a: string | null) => void;\n};\n\nconst FeedPost = ({ data, error, setError }: Props) => {\n  const navigate = useNavigate();\n  const matches = useMediaQuery(MEDIA_QUERY);\n\n  const { id, text, authorMeta, videoUrl, diggCount, commentCount, hashtags } =\n    data;\n\n  const clickHandler = () => {\n    navigate(`${Pages.Profile}/${authorMeta.name}`);\n  };\n\n  return (\n    <StyledDiv>\n      <StyledSection>\n        <StyledAvatar\n          alt={authorMeta.nickName}\n          src={authorMeta.avatar}\n          onClick={clickHandler}\n        />\n      </StyledSection>\n      <section>\n        <PostHeader\n          nickName={authorMeta.nickName}\n          text={text}\n          hashtags={hashtags}\n          onClick={clickHandler}\n        />\n        <StyledArticle isMobile={matches}>\n          <MediaCard\n            id={id}\n            videoURL={videoUrl}\n            error={error}\n            setError={setError}\n          />\n          <PostActions diggCount={diggCount} commentCount={commentCount} />\n        </StyledArticle>\n      </section>\n    </StyledDiv>\n  );\n};\n\nexport default FeedPost;\n","import FeedPost from './FeedPost';\n\nexport default FeedPost;\n","import Grid, { GridProps } from '@mui/material/Grid';\nimport { styled } from '@mui/material/styles';\n\nimport { MobileProp } from '../../constants';\n\ninterface StyledGridContainerProps extends GridProps {\n  isMobile?: boolean\n}\n\nconst StyledGridContainer = styled(Grid, {\n  shouldForwardProp: (prop) => prop !== MobileProp,\n})<StyledGridContainerProps>(({ isMobile }) => ({\n  paddingLeft: isMobile ? '5vw' : '30vw',\n  marginTop: 50,\n  marginBottom: 50,\n}));\n\nconst StyledDiv = styled('div')(() => ({\n  marginLeft: 'auto',\n  marginRight: 'auto',\n  width: '100%',\n  display: 'flex',\n  justifyContent: 'center',\n  marginBottom: 20,\n}));\n\nexport { StyledGridContainer, StyledDiv };\n","import React, { useState, MouseEvent } from 'react';\nimport Grid from '@mui/material/Grid';\nimport Pagination from '@mui/material/Pagination';\nimport useMediaQuery from '@mui/material/useMediaQuery';\n\nimport FeedPost from './FeedPost';\nimport ErrorAlert from '../ErrorAlert';\nimport {\n  MAX_POSTS,\n  POSTS_PER_PAGE,\n  MEDIA_QUERY,\n  ErrorMessages,\n} from '../../constants';\nimport { TrendingFeedList, FeedPostItem } from '../../domain/trendingFeedTypes';\nimport usePageHandler from '../../services/usePageHandler';\nimport { StyledGridContainer, StyledDiv } from './styles';\n\ntype Props = {\n  allPosts: TrendingFeedList;\n};\n\nconst FeedPostsList = ({ allPosts }: Props) => {\n  const [error, setError] = useState<string | null>(null);\n\n  const matches = useMediaQuery(MEDIA_QUERY);\n  const { posts, setCurrentPage } = usePageHandler(allPosts);\n\n  const clickHandler = (event: MouseEvent) => {\n    const clickTarget = event.target as HTMLElement;\n    setCurrentPage(+clickTarget.innerText);\n  };\n\n  return (\n    <div>\n      {error && <ErrorAlert message={ErrorMessages.VideoError} />}\n      <StyledGridContainer isMobile={matches} container spacing={6}>\n        {(posts as TrendingFeedList).map((post: FeedPostItem) => {\n          return (\n            <Grid key={post.id} item xs={12}>\n              <FeedPost data={post} error={error} setError={setError} />\n            </Grid>\n          );\n        })}\n      </StyledGridContainer>\n      <StyledDiv>\n        <Pagination\n          count={MAX_POSTS / POSTS_PER_PAGE}\n          onClick={(event) => clickHandler(event)}\n        />\n      </StyledDiv>\n    </div>\n  );\n};\n\nexport default FeedPostsList;\n","import FeedPostsList from './FeedPostsList';\n\nexport default FeedPostsList;\n","import React from 'react';\nimport { SkeletonFeedList } from 'tiktuk-loading';\n\nimport FeedPostList from '../../components/FeedPostsList';\nimport { renderErrorAlert } from '../../components/ErrorAlert/ErrorAlert';\nimport { TrendingFeedList, ErrorObject } from '../../domain/trendingFeedTypes';\nimport { Endpoint } from '../../api/constants';\nimport { useFetch } from '../../api/useFetch';\nimport { POSTS_PER_PAGE } from '../../constants';\n\nconst TrendingPage = () => {\n  const { data: posts, isLoading, isError } = useFetch(Endpoint.TrendingFeed);\n\n  if (isLoading) {\n    return <SkeletonFeedList postsPerPage={POSTS_PER_PAGE} />;\n  }\n\n  if (!Array.isArray(posts) || isError) {\n    return renderErrorAlert(posts as ErrorObject);\n  }\n\n  return <FeedPostList allPosts={posts as TrendingFeedList} />;\n};\n\nexport default TrendingPage;\n","import TrendingPage from './TrendingPage';\n\nexport default TrendingPage;\n","import Box, { BoxProps } from '@mui/material/Box';\nimport AppBar, { AppBarProps } from '@mui/material/AppBar';\nimport Typography, { TypographyProps } from '@mui/material/Typography';\nimport IconButton, { IconButtonProps } from '@mui/material/IconButton';\nimport { styled } from '@mui/material/styles';\n\nimport { colors } from '../../constants';\n\nconst StyledBox = styled(Box)<BoxProps>(() => ({\n  flexGrow: 1,\n}));\n\nconst StyledAppBar = styled(AppBar)<AppBarProps>(() => ({\n  backgroundColor: colors.primary,\n}));\n\nconst StyledTypography = styled(Typography)<TypographyProps>(() => ({\n  flexGrow: 1,\n  marginLeft: 5,\n  ':hover': {\n    cursor: 'pointer',\n  },\n}));\n\nconst StyledIconButton = styled(IconButton)<IconButtonProps>(() => ({\n  marginRight: 10,\n}));\n\nexport { StyledBox, StyledAppBar, StyledTypography, StyledIconButton };\n","import React, { useState, useEffect } from 'react';\nimport Toolbar from '@mui/material/Toolbar';\nimport IconButton from '@mui/material/IconButton';\nimport AccountCircle from '@mui/icons-material/AccountCircle';\nimport MusicVideoIcon from '@mui/icons-material/MusicVideo';\nimport { useNavigate, useLocation } from 'react-router-dom';\n\nimport { Pages } from '../../constants';\nimport {\n  StyledBox,\n  StyledAppBar,\n  StyledTypography,\n  StyledIconButton,\n} from './styles';\n\nconst MenuAppBar = () => {\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  const [isActive, setIsActive] = useState({\n    feed: false,\n    profile: false,\n  });\n\n  useEffect(() => {\n    switch (location.pathname) {\n      case Pages.Feed:\n        setIsActive({ feed: true, profile: false });\n        break;\n      case Pages.Profile:\n        setIsActive({ feed: false, profile: true });\n        break;\n      default:\n        setIsActive({ feed: false, profile: false });\n        break;\n    }\n  }, [location.pathname]);\n\n  return (\n    <StyledBox>\n      <StyledAppBar position=\"fixed\">\n        <Toolbar>\n          <StyledTypography variant=\"h6\" onClick={() => navigate(Pages.Feed)}>\n            TikTuk :&#41;\n          </StyledTypography>\n          <div>\n            <StyledIconButton\n              size=\"large\"\n              aria-label=\"get trending feed\"\n              onClick={() => navigate(Pages.Feed)}\n              color={isActive.feed ? 'default' : 'inherit'}\n            >\n              <MusicVideoIcon />\n              <StyledTypography variant=\"body1\">Feed</StyledTypography>\n            </StyledIconButton>\n            <IconButton\n              size=\"large\"\n              aria-label=\"account of current user\"\n              onClick={() => navigate(Pages.Profile)}\n              color={isActive.profile ? 'default' : 'inherit'}\n            >\n              <AccountCircle />\n              <StyledTypography variant=\"body1\">Profile</StyledTypography>\n            </IconButton>\n          </div>\n        </Toolbar>\n      </StyledAppBar>\n    </StyledBox>\n  );\n};\n\nexport default MenuAppBar;\n","import MenuAppBar from './MenuAppBar';\n\nexport default MenuAppBar;\n","import React from 'react';\nimport { Routes, Route } from 'react-router-dom';\n\nimport ProfilePage from './ProfilePage';\nimport TrendingPage from './TrendingPage';\nimport MenuAppBar from '../components/MenuAppBar';\nimport { Pages, ErrorMessages } from '../constants';\nimport ErrorAlert from '../components/ErrorAlert';\n\nconst App = () => {\n  return (\n    <div>\n      <header>\n        <MenuAppBar />\n      </header>\n      <Routes>\n        <Route path={Pages.Feed} element={<TrendingPage />} />\n        <Route path={Pages.Profile} element={<ProfilePage />} />\n        <Route path={Pages.User} element={<ProfilePage />} />\n        <Route\n          path=\"*\"\n          element={<ErrorAlert message={ErrorMessages.WrongPage} />}\n        />\n      </Routes>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport App from './pages/App';\nimport './assets/styles/index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}